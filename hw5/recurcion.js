// Вычислить сумму чисел до данного
// Напишите функцию sumTo(n), которая для данного n вычисляет сумму чисел от 1 до n

// С использованием цикла.
function sumTo(n) {
  var sum = 0;
  for (var i = 1; i <= n; i++) {
    sum += i;
  }
  return sum;
}
alert( sumTo(100) );

// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) для n > 1.
function sumTo(n) {
  if (n == 1) return 1;
  return n + sumTo(n - 1);
}
alert( sumTo(100) );

// С использованием формулы для суммы арифметической прогрессии.
function sumTo(n) { //самый быстрый
  return n * (n + 1) / 2;
}
alert( sumTo(100) );

// рекурсивный вызов sumTo(100000) выдаст ошибку, потому что есть ограничение по глубине рекурсии


// Вычислить факториал
// Факториа́л числа – это число, умноженное на «себя минус один», затем на «себя минус два» и так далее, до единицы. Обозначается n!
// Определение факториала можно записать как:
// n! = n * (n - 1) * (n - 2) * ...*1
// Задача – написать функцию factorial(n), которая возвращает факториал числа n!, используя рекурсивный вызов.
// alert( factorial(5) ); // 120
// Подсказка: обратите внимание, что n! можно записать как n * (n-1)!. Например: 3! = 3*2! = 3*2*1! = 6
function factorial(n) {
  return (n != 1) ? n * factorial(n - 1) : 1;
}
alert( factorial(5) );

// Числа Фибоначчи
// Последовательность чисел Фибоначчи имеет формулу Fn = Fn-1 + Fn-2. То есть, следующее число получается как сумма двух предыдущих.
// Первые два числа равны 1, затем 2(1+1), затем 3(1+2), 5(2+3) и так далее: 1, 1, 2, 3, 5, 8, 13, 21....
// Числа Фибоначчи тесно связаны с золотым сечением и множеством природных явлений вокруг нас.
// Напишите функцию fib(n), которая возвращает n-е число Фибоначчи.
